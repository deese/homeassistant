blueprint:
  name: Simple Hue Wall Switch Module
  description: "Blueprint for Home Assistant for the Hue Wall Switch using zigbee2mqtt. This doesnt support right button hold."
  domain: automation
  
  input:
    switch:
      name: Switch
      description: Action sensor of Hue Wall Switch to use
      selector:
        entity:
          domain: sensor
          integration: mqtt

    press_left:
      name: Press left button 
      description: Action to run on left button press
      default: []
      selector:
        action: {}

    hold_left:
      name: Hold left button
      description: Action to run on holding left button
      default: []
      selector:
        action: {}

    release_left:
      name: Release left button
      description: Action to run on releasing left button
      default: []
      selector:
        action: {}

    press_right:
      name: Press right button
      description: Action to run on right button press
      default: []
      selector:
        action: {}

    hold_right:
      name: Hold right button
      description: Action to run on holding right button
      default: []
      selector:
        action: {}

    release_right:
      name: Release right button
      description: Action to run on releasing right button
      default: []
      selector:
        action: {}
mode: single
max_exceeded: silent
trigger:
  - platform: state
    entity_id: !input switch
    to:
      - "left_press"
      - "left_hold"
      - "left_hold_release"
      - "right_press"
      - "right_hold"
      - "right_hold_release"
      - "toggle"
action:
  - choose:
    - conditions:
      - condition: template
        value_template: "{{ trigger.to_state.state == \"left_press\" or trigger.to_state.state == \"toggle\" }}"
      sequence: !input press_left
    - conditions:
      - condition: template
        value_template: "{{ trigger.to_state.state == \"left_hold\" }}"
      sequence: !input hold_left
    - conditions:
      - condition: template
        value_template: "{{ trigger.to_state.state == \"left_hold_release\" }}"
      sequence: !input release_left
    - conditions:
      - condition: template
        value_template: "{{ trigger.to_state.state == \"right_hold\" }}"
      sequence: !input press_right
    - conditions:
      - condition: template
        value_template: "{{ trigger.to_state.state == \"right_hold_release\" }}"
      sequence: !input release_right

