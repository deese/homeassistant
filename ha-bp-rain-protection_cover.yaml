blueprint:
  name: Rain protection with cover
  description: Shutdown a cover when it rains and the window is open
  domain: automation
  input:
    weather_sensor:
      name: Weather sensor
      description: Choose the weather sensor to be used.
      selector:
        entity:
          domain: weather
    window_sensor:
      name: Window sensor
      description: Choose the occupancy sensor to control the lights.
      selector:
        entity:
          domain: sensor
    target_cover:
      name: Target cover
      description: Choose the cover you want to control.
      selector:
          entity:
            domain: cover
    cover_position:
      name: Cover position
      description: Where to move the cover position to
      default:
      selector:
        number:
          min: 0
          max: 100
          step: 1
          unit_of_measurement: "percentage" 
    notification_entity:
      name: (OPTIONAL) Notification entity
      description:  Send notification when executing the protection using this entity
      selector:
        entity:
          domain: notify
    notification_message:
      name: (OPTIONAL) Notification message
      description: Template for the notification
      selector:
        template:
    disable_protection:
      name: (OPTIONAL) Entity to disable the protection from running.  
      description: A boolean that disables the protection when is TRUE.
      selector:
          entity:
            domain: input_boolean
variables:
  disable_protection: !input disable_protection
  weather_sensor: !input weather_sensor
  window_sensor: !input window_sensor
  target_cover: !input target_cover
  cover_position: !input cover_position
  notification_message: !input notification_message
  notification_entity: !input notification_entity
  
trigger:
  - platform: state
    entity_id:
      - !input weather_sensor
    to:
      - hail
      - lightning
      - lightning-rainy
      - pouring
      - rainy
      - snowy
      - snowy-rainy
condition:
  - condition: and
    conditions:
      - condition: template
        alias: 'Check for blocker entity'
        value_template: "{{ (disable_protection == none) or (states(disable_protection) == 'off') }}"
      - condition: state
        entity_id: !input window_sensor
        state: Open
      - condition: numeric_state
        entity_id: !input target_cover
        attribute: current_position
        above: !input cover_position

action:
  - service: cover.set_cover_position
    data:
      position: !input cover_position
    target:
      entity_id: !input target_cover
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ notification_message != none and notification_entity != none) }}"
        sequence:
          - service: !input notification_entity
            data:
              message: !input notification_message
mode: restart
